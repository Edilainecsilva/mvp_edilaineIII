{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\edila\\\\OneDrive\\\\Documentos\\\\desenvolvimento_full_stack\\\\mvp_edilaineIII\\\\front\\\\src\\\\contexts\\\\CartContext.js\",\n  _s = $RefreshSig$();\nimport { createContext, useState, useEffect } from 'react';\nimport Axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CartContext = /*#__PURE__*/createContext();\nconst CartProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  //cart state\n  const [cart, setCart] = useState([]);\n\n  //item amount state\n  const [itemAmount, setItemAmount] = useState(0);\n\n  //total preço state\n  const [total, setTotal] = useState(0);\n  useEffect(() => {\n    const total = cart.reduce((accumulator, currentItem) => {\n      return accumulator + currentItem.price * currentItem.amount;\n    }, 0);\n    setTotal(total);\n  }, [cart]);\n\n  //update item amount\n  useEffect(() => {\n    if (cart) {\n      const amount = cart.reduce((accumulator, currentItem) => {\n        return accumulator + currentItem.amount;\n      }, 0);\n      setItemAmount(amount);\n    }\n  }, [cart]);\n\n  //add ao carrinho\n  const addToCart = (product, id) => {\n    const newItem = {\n      ...product,\n      amount: 1\n    };\n    //check se o item já está no carrinho\n    const CartItem = cart.find(item => {\n      return item.id === id;\n    });\n    //se o item já estiver no carrinho\n    if (CartItem) {\n      const newCart = [...cart].map(item => {\n        if (item.id === id) {\n          return {\n            ...item,\n            amount: CartItem.amount + 1\n          };\n        } else {\n          return item;\n        }\n      });\n      setCart(newCart);\n    } else {\n      setCart([...cart, newItem]);\n    }\n  };\n  const removeFromCart = id => {\n    const newCart = cart.filter(item => {\n      return item.id !== id;\n    });\n    setCart(newCart);\n  };\n\n  //limpar carrinho\n  const clearCart = () => {\n    setCart([]);\n  };\n\n  //aumentar a quantidade \n  const increaseAmount = id => {\n    const CartItem = cart.find(item => item.id === id);\n    addToCart(CartItem, id);\n  };\n\n  //diminiur quantidade\n  const decreaseAmount = id => {\n    const CartItem = cart.find(item => {\n      return item.id === id;\n    });\n    if (CartItem) {\n      const newCart = cart.map(item => {\n        if (item.id === id) {\n          return {\n            ...item,\n            amount: CartItem.amount - 1\n          };\n        } else {\n          return item;\n        }\n      });\n      setCart(newCart);\n    }\n    if (CartItem.amount < 2) {\n      removeFromCart(id);\n    }\n  };\n  const handleSubmit = async cart => {\n    const formData = new FormData();\n    formData.append('cart', cart);\n    let url = 'http://localhost:3000/pedidos';\n    fetch(url, {\n      method: 'post',\n      body: formData\n    }).then(response => response.json()).catch(error => {\n      console.error('Error:', error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: {\n      cart,\n      addToCart,\n      removeFromCart,\n      clearCart,\n      increaseAmount,\n      decreaseAmount,\n      handleSubmit,\n      itemAmount,\n      total\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 9\n  }, this);\n};\n_s(CartProvider, \"Kz5CWpiyDEM4J/u3gfCF2tGqp2E=\");\n_c = CartProvider;\nexport default CartProvider;\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["createContext","useState","useEffect","Axios","jsxDEV","_jsxDEV","CartContext","CartProvider","_ref","_s","children","cart","setCart","itemAmount","setItemAmount","total","setTotal","reduce","accumulator","currentItem","price","amount","addToCart","product","id","newItem","CartItem","find","item","newCart","map","removeFromCart","filter","clearCart","increaseAmount","decreaseAmount","handleSubmit","formData","FormData","append","url","fetch","method","body","then","response","json","catch","error","console","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/edila/OneDrive/Documentos/desenvolvimento_full_stack/mvp_edilaineIII/front/src/contexts/CartContext.js"],"sourcesContent":["import {createContext, useState, useEffect } from 'react';\r\nimport Axios from 'axios';\r\n\r\n\r\nexport const CartContext = createContext()\r\n\r\nconst CartProvider = ({ children }) => {\r\n    //cart state\r\n    const [cart, setCart] = useState([]);\r\n\r\n    //item amount state\r\n    const [itemAmount, setItemAmount] = useState(0);\r\n\r\n    //total preço state\r\n    const [total, setTotal] = useState(0)\r\n\r\n    useEffect(() => {\r\n        const total = cart.reduce((accumulator, currentItem) => {\r\n            return accumulator + currentItem.price * currentItem.amount;\r\n        }, 0)\r\n        setTotal(total)\r\n    }, [cart])\r\n\r\n    //update item amount\r\n    useEffect(() => {\r\n        if (cart) {\r\n            const amount = cart.reduce((accumulator, currentItem) => {\r\n            return accumulator + currentItem.amount;\r\n        }, 0);\r\n        setItemAmount(amount)\r\n        }\r\n    }, [cart])\r\n\r\n    //add ao carrinho\r\n    const addToCart = (product, id) => {\r\n        const newItem = {...product, amount: 1}\r\n        //check se o item já está no carrinho\r\n        const CartItem = cart.find((item) => {\r\n            return item.id === id;\r\n        })\r\n        //se o item já estiver no carrinho\r\n        if (CartItem) {\r\n            const newCart = [...cart].map(item=> {\r\n                if (item.id === id) {\r\n                    return {...item, amount: CartItem.amount + 1 }\r\n                } else {\r\n                    return item;\r\n                }\r\n            })\r\n            setCart(newCart)\r\n        } else {\r\n            setCart([...cart, newItem])\r\n        }\r\n    }\r\n\r\n    const removeFromCart = (id) => {\r\n        const newCart = cart.filter((item) => {\r\n            return item.id !== id;\r\n        })\r\n        setCart(newCart)\r\n    }\r\n\r\n    //limpar carrinho\r\n    const clearCart = () => {\r\n        setCart([])\r\n    }\r\n    \r\n    //aumentar a quantidade \r\n    const increaseAmount = (id) => {\r\n        const CartItem = cart.find((item) => item.id === id)\r\n        addToCart(CartItem, id)\r\n    }\r\n\r\n    //diminiur quantidade\r\n    const decreaseAmount = (id) => {\r\n        const CartItem = cart.find(item => {\r\n            return item.id === id;\r\n        })\r\n        if (CartItem) {\r\n            const newCart = cart.map((item) => {\r\n                if(item.id === id) {\r\n                    return { ...item, amount: CartItem.amount - 1}\r\n                } else {\r\n                    return item;\r\n                }\r\n            });\r\n            setCart(newCart)\r\n        } \r\n        \r\n        if (CartItem.amount < 2) {\r\n            removeFromCart(id)\r\n        }\r\n        \r\n    }\r\n\r\n            const handleSubmit = async (cart) => {\r\n            const formData = new FormData();\r\n            formData.append('cart', cart);\r\n            \r\n            let url = 'http://localhost:3000/pedidos';\r\n            fetch(url, {\r\n                method: 'post',\r\n                body: formData\r\n            })\r\n                .then((response) => response.json())\r\n                .catch((error) => {\r\n                console.error('Error:', error);\r\n                });\r\n            }\r\n\r\n    return (\r\n        <CartContext.Provider \r\n        value={{ \r\n            cart, \r\n            addToCart, \r\n            removeFromCart, \r\n            clearCart, \r\n            increaseAmount, \r\n            decreaseAmount, \r\n            handleSubmit,\r\n            itemAmount,\r\n            total, \r\n            \r\n            }}>\r\n            { children }\r\n        </CartContext.Provider>\r\n    )\r\n}\r\n\r\n\r\nexport default CartProvider;"],"mappings":";;AAAA,SAAQA,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AACzD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG1B,OAAO,MAAMC,WAAW,gBAAGN,aAAa,CAAC,CAAC;AAE1C,MAAMO,YAAY,GAAGC,IAAA,IAAkB;EAAAC,EAAA;EAAA,IAAjB;IAAEC;EAAS,CAAC,GAAAF,IAAA;EAC9B;EACA,MAAM,CAACG,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;;EAEpC;EACA,MAAM,CAACY,UAAU,EAAEC,aAAa,CAAC,GAAGb,QAAQ,CAAC,CAAC,CAAC;;EAE/C;EACA,MAAM,CAACc,KAAK,EAAEC,QAAQ,CAAC,GAAGf,QAAQ,CAAC,CAAC,CAAC;EAErCC,SAAS,CAAC,MAAM;IACZ,MAAMa,KAAK,GAAGJ,IAAI,CAACM,MAAM,CAAC,CAACC,WAAW,EAAEC,WAAW,KAAK;MACpD,OAAOD,WAAW,GAAGC,WAAW,CAACC,KAAK,GAAGD,WAAW,CAACE,MAAM;IAC/D,CAAC,EAAE,CAAC,CAAC;IACLL,QAAQ,CAACD,KAAK,CAAC;EACnB,CAAC,EAAE,CAACJ,IAAI,CAAC,CAAC;;EAEV;EACAT,SAAS,CAAC,MAAM;IACZ,IAAIS,IAAI,EAAE;MACN,MAAMU,MAAM,GAAGV,IAAI,CAACM,MAAM,CAAC,CAACC,WAAW,EAAEC,WAAW,KAAK;QACzD,OAAOD,WAAW,GAAGC,WAAW,CAACE,MAAM;MAC3C,CAAC,EAAE,CAAC,CAAC;MACLP,aAAa,CAACO,MAAM,CAAC;IACrB;EACJ,CAAC,EAAE,CAACV,IAAI,CAAC,CAAC;;EAEV;EACA,MAAMW,SAAS,GAAGA,CAACC,OAAO,EAAEC,EAAE,KAAK;IAC/B,MAAMC,OAAO,GAAG;MAAC,GAAGF,OAAO;MAAEF,MAAM,EAAE;IAAC,CAAC;IACvC;IACA,MAAMK,QAAQ,GAAGf,IAAI,CAACgB,IAAI,CAAEC,IAAI,IAAK;MACjC,OAAOA,IAAI,CAACJ,EAAE,KAAKA,EAAE;IACzB,CAAC,CAAC;IACF;IACA,IAAIE,QAAQ,EAAE;MACV,MAAMG,OAAO,GAAG,CAAC,GAAGlB,IAAI,CAAC,CAACmB,GAAG,CAACF,IAAI,IAAG;QACjC,IAAIA,IAAI,CAACJ,EAAE,KAAKA,EAAE,EAAE;UAChB,OAAO;YAAC,GAAGI,IAAI;YAAEP,MAAM,EAAEK,QAAQ,CAACL,MAAM,GAAG;UAAE,CAAC;QAClD,CAAC,MAAM;UACH,OAAOO,IAAI;QACf;MACJ,CAAC,CAAC;MACFhB,OAAO,CAACiB,OAAO,CAAC;IACpB,CAAC,MAAM;MACHjB,OAAO,CAAC,CAAC,GAAGD,IAAI,EAAEc,OAAO,CAAC,CAAC;IAC/B;EACJ,CAAC;EAED,MAAMM,cAAc,GAAIP,EAAE,IAAK;IAC3B,MAAMK,OAAO,GAAGlB,IAAI,CAACqB,MAAM,CAAEJ,IAAI,IAAK;MAClC,OAAOA,IAAI,CAACJ,EAAE,KAAKA,EAAE;IACzB,CAAC,CAAC;IACFZ,OAAO,CAACiB,OAAO,CAAC;EACpB,CAAC;;EAED;EACA,MAAMI,SAAS,GAAGA,CAAA,KAAM;IACpBrB,OAAO,CAAC,EAAE,CAAC;EACf,CAAC;;EAED;EACA,MAAMsB,cAAc,GAAIV,EAAE,IAAK;IAC3B,MAAME,QAAQ,GAAGf,IAAI,CAACgB,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACJ,EAAE,KAAKA,EAAE,CAAC;IACpDF,SAAS,CAACI,QAAQ,EAAEF,EAAE,CAAC;EAC3B,CAAC;;EAED;EACA,MAAMW,cAAc,GAAIX,EAAE,IAAK;IAC3B,MAAME,QAAQ,GAAGf,IAAI,CAACgB,IAAI,CAACC,IAAI,IAAI;MAC/B,OAAOA,IAAI,CAACJ,EAAE,KAAKA,EAAE;IACzB,CAAC,CAAC;IACF,IAAIE,QAAQ,EAAE;MACV,MAAMG,OAAO,GAAGlB,IAAI,CAACmB,GAAG,CAAEF,IAAI,IAAK;QAC/B,IAAGA,IAAI,CAACJ,EAAE,KAAKA,EAAE,EAAE;UACf,OAAO;YAAE,GAAGI,IAAI;YAAEP,MAAM,EAAEK,QAAQ,CAACL,MAAM,GAAG;UAAC,CAAC;QAClD,CAAC,MAAM;UACH,OAAOO,IAAI;QACf;MACJ,CAAC,CAAC;MACFhB,OAAO,CAACiB,OAAO,CAAC;IACpB;IAEA,IAAIH,QAAQ,CAACL,MAAM,GAAG,CAAC,EAAE;MACrBU,cAAc,CAACP,EAAE,CAAC;IACtB;EAEJ,CAAC;EAEO,MAAMY,YAAY,GAAG,MAAOzB,IAAI,IAAK;IACrC,MAAM0B,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAE5B,IAAI,CAAC;IAE7B,IAAI6B,GAAG,GAAG,+BAA+B;IACzCC,KAAK,CAACD,GAAG,EAAE;MACPE,MAAM,EAAE,MAAM;MACdC,IAAI,EAAEN;IACV,CAAC,CAAC,CACGO,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCC,KAAK,CAAEC,KAAK,IAAK;MAClBC,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;IAC9B,CAAC,CAAC;EACN,CAAC;EAET,oBACI3C,OAAA,CAACC,WAAW,CAAC4C,QAAQ;IACrBC,KAAK,EAAE;MACHxC,IAAI;MACJW,SAAS;MACTS,cAAc;MACdE,SAAS;MACTC,cAAc;MACdC,cAAc;MACdC,YAAY;MACZvB,UAAU;MACVE;IAEA,CAAE;IAAAL,QAAA,EACAA;EAAQ;IAAA0C,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACQ,CAAC;AAE/B,CAAC;AAAA9C,EAAA,CAzHKF,YAAY;AAAAiD,EAAA,GAAZjD,YAAY;AA4HlB,eAAeA,YAAY;AAAC,IAAAiD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}